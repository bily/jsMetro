<!DOCTYPE html>
<html>
    <head>
        <title>jsMetro Demos</title>
        <meta name="author" content="John Sedlak" />
        <meta name="keywords" content="javascript,jquery,metro,wp7" />
        <meta name="description" content="A set of samples that demonstrate Metro type functionality and elements on a website." />
        
        <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.1.js"></script>
        <!--<script src="http://ajax.aspnetcdn.com/ajax/modernizr/modernizr-2.0.6-development-only.js"></script>-->
        <script src="content/scripts/date-format.js"></script>
        <script src="content/scripts/jscom.metro-tools.js"></script>
        
        <link href="content/css/base.css" rel="stylesheet" media="all" />
        <link href="content/css/jscom.metro.css" rel="stylesheet" media="all" />
        
        <!--[if gte IE 9]>
          <style type="text/css">
            .gradient {
               filter: none;
            }
          </style>
        <![endif]-->
        
        <style>       
            body, html { height: 200%; }
            .red { background: red !important; }
        </style>
        
        <script>
            $(document).ready(function(event){
				/* Pre/Initialization */
				$.js.notify();
				$.js.dialog();
                $('#MetroVersion').html($.js.version);
				
				/* Header Links */
				$('#Page>header ul a').click(function(event) {
					event.preventDefault();
					
					var that = $(this);
					var scrollDestination = $('a[name="' + that.attr('href').substr(1) + '"]');
					
					if (window.history && window.history.pushState) {
						window.history.pushState('', scrollDestination.html() + ' - jsMetro Demos', that.attr('href'))
					}
					
					scrollDestination.scrollTo();
				});
                
                $('.collapsible-wrapper').collapsible({
                    toggleSelector: 'a.toggle',
                    hidden: function(parent, toggle) {
                        if (toggle.data('hidden-text')) {
                            toggle.html(toggle.data('hidden-text'));
                        } else {
                            toggle.html('[+] View Demo');
                        }
                    },
                    visible: function(parent, toggle) { 
                        if (toggle.data('visible-text')) {
                            toggle.html(toggle.data('visible-text'));
                        } else {
                            toggle.html('[-] Hide Demo');
                        }
                    }
                });
               
                
                $('#TestNotify').click(function(event){
                    event.preventDefault();
                    
                    $.js.notify('hello, world!');
                });
                
                $('#TestNotifyTimeout').click(function(event){
                    event.preventDefault();
                    
                    $.js.notify(
                        'hello, world!',
                        { timeout: 1000 }                        
                    );
                });
                
                $('#TestNotifyTimeoutColor').click(function(event){
                    event.preventDefault();
                    
                    $.js.notify(
                        'hello, world!',
                        { timeout: 1000, cssClass: 'red' }                        
                    );
                });
				
				$('#BasicDialog').click(function(event) {
					event.preventDefault();
					
					$.js.dialog(
						'<p>Would you like to continue?</p>',
						{
							buttons: [ 'Cancel', 'Continue' ],
							buttonClasses: [ 'previous icon button', 'next icon button' ],
							callbacks: [ null, null ]
						}
					);
				});
            });
        </script>
    </head>
    
    <body>
        <div id="Page">
            <header>
                <ul>
                    <li><a href="#notify">Notify</a></li>
                    <li><a href="#dialog">Dialog</a></li>
                    <li><a href="#collapsible">Collapsible</a></li>
                    <li><a href="#scrollto">ScrollTo</a></li>
                    <li><a href="#forms">Forms</a></li>
                </ul>
            </header>
            <article>
                <h1>jsMetro v<span id="MetroVersion">...</span> Demos</h1>
                
                <h2><a role="anchor" name="notify">Notifications</a></h2>
                <p>The Notify API displays a notification akin to the Windows Phone 7 (WP7) notification bar (displayed after recieving a text message). It requires a direct call and makes use of an element automatically added to the DOM (<code>#JSNotification</code>).</p>
                <ul class="examples">
                    <li>
                        <span role="title">PreInitialization of the DOM</span>
                        <p>To ensure that the CSS animation works correctly the first time you supply a notification, you can simply pass in zero arguments into the <code>$.js.notify</code> function. This will add the appropriate elements to the DOM, letting the browser apply the CSS.</p>
                        <div class="collapsible-wrapper">
                            <a href="#" class="toggle" data-hidden-text="[+] View Source" data-visible-text="[-] Hide Source">[+] View Source</a>
                            <div class="collapsible"><pre>$.js.notify();</pre></div>
                        </div>
                    </li>
                    <li>
                        <a id="TestNotify" href="#">Create a Notification</a>
                        <div class="collapsible-wrapper">
                            <a href="#" class="toggle" data-hidden-text="[+] View Source" data-visible-text="[-] Hide Source">[+] View Source</a>
                            <div class="collapsible"><pre>$.js.notify('hello, world!');</pre></div>
                        </div>
                    </li>
                    <li>
                        <a id="TestNotifyTimeout" href="#">Create a 1 Second Notification</a>
                        <div class="collapsible-wrapper">
                            <a href="#" class="toggle" data-hidden-text="[+] View Source" data-visible-text="[-] Hide Source">[+] View Source</a>
                            <pre class="collapsible">$.js.notify(
    'hello, world',
    { timeout: 1000 }                        
);</pre>
                        </div>
                    </li>
                    <li>
                        <a id="TestNotifyTimeoutColor" href="#">Create a 1 Second, Red Notification</a>
                        <div class="collapsible-wrapper">
                            <a href="#" class="toggle" data-hidden-text="[+] View Source" data-visible-text="[-] Hide Source">[+] View Source</a>
                            <pre class="collapsible">$.js.notify(
    'hello, world',
    { timeout: 1000, cssClass: 'red' }                        
);</pre>
                        </div>
                    </li>
                </ul>
                
                <h2><a role="anchor" name="dialog">Dialog</a></h2>
                <p>Coming soon.</p>
				<h3>Demos</h3>
				<p><a href="#" id="BasicDialog">Basic Dialog</a></p>
                
                <h2><a role="anchor" name="collapsible">Collapsible</a></h2>
                <p>Collapsible takes each element and looks for two things: a child configurable element that triggers the collapsing, and the element to collapse.</p>
				
				<h3>Options</h3>
				<ul>
					<li><code>collapsibleSelector</code> - The jQuery selector for choosing the element that collapses. (default: <code>.collapse</code>)</li>
					<li><code>toggleSelector</code> - The jQuery selector for choosing the element that toggles the collapse. The selector works off the parent wrapper element. (default: <code>&gt;a</code>)</li>
					<li><code>hidden</code> - Callback function for when a collapsible is hidden. <code>parent</code> is set to the parent wrapper element; <code>toggle</code> is the element that triggered the event.</li>
					<li><code>visible(parent, toggle)</code> - Callback function for when a collapsible is made visible. <code>parent</code> is set to the parent wrapper element; <code>toggle</code> is the element that triggered the event.</li>
					<li><code>time</code> - The time (in milliseconds) for the slide animation. (default: <code>250</code>)</li>
					<li><code>easing</code> - Easing function used for jQuery animations. (default: <code>linear</code>)</li>
					<li><code>autoCollapse</code> - Boolean that will automatically collapse (or not) all collapsibles. (default: <code>true</code>)</li>
				</ul>
                
                <h3>Demo</h3>
                <div class="collapsible-wrapper">
                    <p><a href="#" class="toggle button">[+] View Demo</a></p>
                    <pre class="collapsible">sample block
                    </pre>
                </div>
                
                <h4>HTML/CSS</h4>
                <p>The basic HTML setup has a wrapper element that contains two child elements - the trigger and the collapsible element.</p>
<pre>&lt;div class="collapsible-wrapper"&gt;
    &lt;p&gt;&lt;a href="#" class="toggle button"&gt;[+] Expand&lt;/a&gt;&lt;/p&gt;
    &lt;pre class="collapsible"&gt;sample block
    &lt;/pre&gt;
&lt;/div&gt;</pre>

                <h4>jQuery</h4>
                <p>The collapsible function can take a few options. Demoed here are <code>toggleSelector</code>, <code>hidden</code>, and <code>visible</code>.</p>
<pre>$('.collapsible-wrapper').collapsible({
    toggleSelector: 'a.toggle',
    hidden: function(parent, toggle) {
        if (toggle.data('hidden-text')) {
            toggle.html(toggle.data('hidden-text'));
        } else {
            toggle.html('[+] View Demo');
        }
    },
    visible: function(parent, toggle) { 
        if (toggle.data('visible-text')) {
            toggle.html(toggle.data('visible-text'));
        } else {
            toggle.html('[-] Hide Demo');
        }
    }
});
</pre>
                
                
                <h2><a role="anchor" name="scrollto">ScrollTo</a></h2>
                <p>The ScrollTo function allows for easy smooth scrolling to an element. The following demonstrates how the top navigation works on this site. It simultaneously pushes a history state while initiating the smooth scroll.</p>
<pre>$('#Page&gt;header ul a').click(function(event) {
	event.preventDefault();
	
	var that = $(this);
	var scrollDestination = $('a[name="' + that.attr('href').substr(1) + '"]');
	
	if (window.history && window.history.pushState) {
		window.history.pushState('', scrollDestination.html() + ' - jsMetro Demos', that.attr('href'))
	}
	
	scrollDestination.scrollTo();
});</pre>
                
                <h2><a role="anchor" name="forms">Forms</a></h2>
                <p>As part of the jsMetro package, a few form styles have been included.</p>
                <h3>Buttons</h3>
                <p>
                    <input type="button" class="button" value="input.button" />
                    <a class="button" href="#">a.button</a>
                    <a class="edit icon button" href="#">a.button.edit.icon</a>
                </p>
<pre>&lt;p&gt;
    &lt;input type="button" class="button" value="input.button" /&gt;
    &lt;a class="button" href="#"&gt;a.button&lt;/a&gt;
    &lt;a class="edit icon button" href="#"&gt;a.button.edit.icon&lt;/a&gt;
&lt;/p&gt;</pre>
                <div class="collapsible-wrapper">
                    <p><a href="#" class="toggle button">[+] View Demo</a></p>
                    <p class="collapsible">
                        <a class="add icon button" href="#">add</a>
                        <a class="back icon button" href="#">back</a>
                        <a class="camera icon button" href="#">camera</a>
                        <a class="cancel icon button" href="#">cancel</a>
                        <a class="check icon button" href="#">check</a>
                        <a class="delete icon button" href="#">delete</a>
                        <a class="download icon button" href="#">download</a>
                        <a class="edit icon button" href="#">edit</a>
                        <a class="add-to-favs icon button" href="#">add-to-favs</a>
                        <a class="favs icon button" href="#">favs</a>
                        <a class="ff icon button" href="#">ff</a>
                        <a class="flag icon button" href="#">flag</a>
                        <a class="folder icon button" href="#">folder</a>
                        <a class="heart icon button" href="#">heart</a>
                        <a class="info icon button" href="#">info</a>
                        <a class="mail icon button" href="#">mail</a>
                        <a class="minus icon button" href="#">minus</a>
                        <a class="next icon button" href="#">next</a>
                        <a class="previous icon button" href="#">previous</a>
                        <a class="overflow icon button" href="#">overflow</a>
                        <a class="parent icon button" href="#">parent</a>
                        <a class="pause icon button" href="#">pause</a>
                        <a class="phone icon button" href="#">phone</a>
                        <a class="play icon button" href="#">play</a>
                        <a class="question icon button" href="#">question</a>
                        <a class="refresh icon button" href="#">refresh</a>
                        <a class="rew icon button" href="#">rew</a>
                        <a class="save icon button" href="#">save</a>
                        <a class="search icon button" href="#">search</a>
                        <a class="settings icon button" href="#">settings</a>
                        <a class="share icon button" href="#">share</a>
                        <a class="upload icon button" href="#">upload</a>
                        <a class="video icon button" href="#">video</a>
                    </p>
                </div>
            </article>
            <footer>
                <p>&copy;2012 <a href="http://johnsedlak.com">John Sedlak</a>.</p>
            </footer>
        </div>
    </body>
</html>