<!DOCTYPE html>
<html>
    <head>
        <title>jsMetro</title>

        <link rel="stylesheet" href="content/css/base.css" />
        <link rel="stylesheet" href="content/css/jscom.metro.css" />

        <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>

        <script src="content/scripts/date-format.js"></script>
        <script src="content/scripts/jscom.metro.js"></script>
        <script src="content/scripts/showcase.js"></script>

        <script>
            $(document).ready(function () {
                $.js.theme(THEMES.JSCOM);
                /*
                var as = new ActionStack();

                as.push(function (se) {
                    log('just wait 5 seconds!');
                    setTimeout(function () {
                        log('this is my first event!');

                        se.close();
                    }, 1000);
                });

                as.push(function (se) {
                    log('no wait.');
                    se.close();
                });

                as.push(function (se) {
                    $.js.dialog(
                        '<h3>Hello, world</h3><p>This is NOT lorem ipsum.</p><p class="pull-right"><a href="#" data-role="button" class="large">Close</a>',
                        function () {
                            se.close();
                        }
                    );
                });

                as.push(function (se) {
                    $.js.dialog(
                        '<h3>Colorful Buttons</h3>' +
                        '<p>In hac habitasse platea dictumst. Proin adipiscing bibendum est, ut tincidunt nunc blandit eget. Phasellus congue ante ligula. Aenean quis lacus eu orci aliquam sagittis. Maecenas nec lectus vel urna venenatis tincidunt. Phasellus ut diam urna, euismod dignissim quam. Aenean leo turpis, fringilla et tristique non, rhoncus vel ligula.</p>' +
                        '<p class="pull-right"><a href="#" data-role="button" data-theme="green" class="large">Close</a>',
                        function () {
                            se.close();
                        }
                    );
                });*/
            });
        </script>
    </head>

    <body>
        <header data-role="content" >
            <section>
                <hgroup class="pull-left">
                    <h1>jsMetro</h1>
                </hgroup>
                <nav class="pull-right">
                    <ul data-role="navigation" data-horizontal="true" data-theme="purple">
                        <li><a href="#About" data-role="button">About</a></li>
                        <li><a href="#JavaScript" data-role="button">JavaScript</a></li>
                        <li><a href="#FormElements" data-role="button">Forms</a></li>
                    </ul>
                </nav>
                <div class="clear"><!--clear--></div>
            </section>
        </header>

        <article data-role="content">
            <section id="About">
                <h2>About The Project</h2>

                <p>It's pretty simple - I really am enjoying the decision my Microsoft to apply the "Metro" design language to their product portfolio. This project aims to tackle some of the issues in bringing those sorts of user experiences and their elements to the web.</p>
            </section>

            <hr />

            <section id="ActionStack">
                <h2>ActionStack</h2>
                <p>The <code>ActionStack</code> class supports First-In-Last-Out (FILO, Stack) based event processing. The goal is to support simultaneous use of the $.js.overlay method and other general purpose, single instance UI elements.</p>

                <h3>Use</h3>
                <p>In the below example, the second event should not fire until the third one has cleared (7000ms+).</p>
                <pre>var as = new ActionStack();

as.push(function (action) {
    log('first action to be entered will fire right away.');

    setTimeout(function () {
        log('timeout finished! time to close the action!');

        action.close();
    }, 5000);

    log('now we\'ll wait 5000ms.');
});

as.push(function (action) {
    log('second action - this shouldn\'t fire until the first one has closed.');

    action.close();
});</pre>
                <div class="pull-right">
                    <a href="#" onclick="javascript:$.showcase.actionStack_simpleSample();return false;" data-role="button" data-theme="red"><i data-icon="refresh"></i> Run this Sample</a>
                </div>
                <div class="clear"><!--clear--></div>
            </section>

            <hr />

            <section id="Events">
                <h2>Events</h2>
                <p>To provide simple access to the implementation of an Event Model, the <code>Event</code> class allows for quick, sequential invocation of methods.</p>
                
                <h3>Use</h3>
                <pre>var ev = new Event('test-event'),
    fun = function () { log('hello, world'); };
                
ev.addHandler(fun);
ev.invoke();
ev.removeHandler(fun);
ev.invoke();</pre>

                <p>The above gives the following output:</p>

                <pre>test-event.invoke -> Found 1 handlers.
hello, world
test-event.invoke -> Found 0 handlers.</pre>

                <p>This should also work with named-anonymous functions:</p>
                <pre>var ev = new Event('test-event');

ev.addHandler(function foo() { log('hello, world'); });
ev.invoke();
ev.removeHandler(function foo() { });
ev.invoke();</pre>
            </section>

            <hr />

            <section id="FormElements">
                <h2>Form Elements</h2>

                <h3>Buttons</h3>
                <p>You'll need one or two attributes: <code>data-role=&quot;button&quot;</code>, and <code>data-theme=&quot;&lt;theme&gt;&quot;</code></p>
                <div>
                    <a href="#" data-role="button" data-theme="green">Green Button</a>
                    <a href="#" data-role="button" data-theme="red">Red Button</a>
                    <a href="#" data-role="button" data-theme="orange">Orange Button</a>
                    <a href="#" data-role="button" data-theme="pink">Pink Button</a>
                    <a href="#" data-role="button" data-theme="brown">Brown Button</a>
                    <a href="#" data-role="button" data-theme="lime">Lime Button</a>
                    <a href="#" data-role="button" data-theme="teal">Teal Button</a>
                    <a href="#" data-role="button" data-theme="purple">Purple Button</a>
                    <a href="#" data-role="button" data-theme="magenta">Magenta Button</a>
                    <a href="#" data-role="button" data-theme="google" class="primary">Google (Primary) Button</a>
                    <a href="#" data-role="button" data-theme="google">Google Button</a>
                    <a href="#" data-role="button" data-theme="facebook">Facebook Button</a>
                    <a href="#" data-role="button" data-theme="jscom">JSCom Button</a>
                </div>

                <h3>Large Buttons</h3>
                <p>Large buttons can be good for some big emphasis - useful for dialogs, big download buttons and more. Just add a little class, <code>class=&quot;large&quot;</code>, and your button will be big!</p>
                <div>
                    <a href="#" data-role="button" data-theme="green" class="large">Green Button</a> 
                    <a href="#" data-role="button" data-theme="red" class="large">Red Button</a>
                    <a href="#" data-role="button" data-theme="orange" class="large">Orange Button</a>
                    <a href="#" data-role="button" data-theme="pink" class="large">Pink Button</a>
                    <a href="#" data-role="button" data-theme="brown" class="large">Brown Button</a>
                    <a href="#" data-role="button" data-theme="lime" class="large">Lime Button</a>
                    <a href="#" data-role="button" data-theme="teal" class="large">Teal Button</a>
                    <a href="#" data-role="button" data-theme="purple" class="large">Purple Button</a>
                    <a href="#" data-role="button" data-theme="magenta" class="large">Magenta Button</a>
                    <a href="#" data-role="button" data-theme="google" class="large primary">Google (Primary) Button</a>
                    <a href="#" data-role="button" data-theme="google" class="large">Google Button</a>
                    <a href="#" data-role="button" data-theme="facebook" class="large">Facebook Button</a>
                    <a href="#" data-role="button" data-theme="jscom" class="large">JSCom Button</a>
                </div>

                <h3>Icons</h3>
                <p>Use the attribute, <code>data-icon</code> to add an icon.</p>
                <pre>&lt;i data-icon="next"&gt;&lt;/i&gt;</pre>
                <div>
                    <a href="#" data-role="button" data-theme="green"><i data-icon="next"></i>Next Icon / Button</a>
                </div>

                <p>You can also apply them to big buttons</p>
                <div>
                    <a href="#" data-role="button" data-theme="google" class="primary large"><i data-icon="download"></i>Download!</a>
                </div>

                <h4>Available Icons</h4>
                <div id="IconGrid">
                    <span><i data-icon="add"></i> add</span>
                    <span><i data-icon="add-to-favs"></i> add-to-favs</span>
                    <span><i data-icon="back"></i> back</span>
                    <span><i data-icon="cancel"></i> cancel</span>
                    <span><i data-icon="checkmark"></i> check[mark]</span>
                    <span><i data-icon="comment"></i> comment</span>
                    <span><i data-icon="delete"></i> delete</span>
                    <span><i data-icon="down"></i> down</span>
                    <span><i data-icon="download"></i> download</span>
                    <span><i data-icon="edit"></i> edit</span>
                    <span><i data-icon="fast-forward"></i> fast-forward</span>
                    <span><i data-icon="favs"></i> fav[orite]s</span>
                    <span><i data-icon="flag"></i> flag</span>
                    <span><i data-icon="folder"></i> folder</span>
                    <span><i data-icon="heart"></i> heart</span>
                    <span><i data-icon="info"></i> info</span>
                    <span><i data-icon="mail"></i> mail</span>
                    <span><i data-icon="minus"></i> minus</span>
                    <span><i data-icon="next"></i> next</span>
                    <span><i data-icon="overflow"></i> overflow</span>
                    <span><i data-icon="pause"></i> pause</span>
                    <span><i data-icon="parent"></i> parent</span>
                    <span><i data-icon="phone"></i> phone</span>
                    <span><i data-icon="play"></i> play</span>
                    <span><i data-icon="previous"></i> previous</span>
                    <span><i data-icon="question-mark"></i> question[-mark]</span>
                    <span><i data-icon="refresh"></i> refresh</span>
                    <span><i data-icon="rewind"></i> rewind</span>
                    <span><i data-icon="save"></i> save</span>
                    <span><i data-icon="search"></i> search</span>
                    <span><i data-icon="settings"></i> settings</span>
                    <span><i data-icon="share"></i> share</span>
                    <span><i data-icon="twitter"></i> twitter</span>
                    <span><i data-icon="up"></i> up</span>
                    <span><i data-icon="upload"></i> upload</span>
                    <span><i data-icon="video"></i> video</span>
                    <span><i data-icon="windows"></i> windows</span>
                </div>
            </section>

            <hr />
            
            <section>
                <h2>Some Heading</h2>
                <p>Vestibulum quis nibh ante. <code>Sed sit amet sem mi</code> Aliquam pellentesque lectus et justo facilisis accumsan <code>non id libero</code>. Nam risus lorem, eleifend vitae pulvinar sit amet, ultrices quis augue. Nam commodo porttitor vulputate. Praesent tortor turpis, vulputate at fringilla eget, rutrum quis nisl. Donec a gravida augue. Donec accumsan tincidunt sapien, pellentesque mollis lorem aliquam vulputate. Proin sed tellus at metus lacinia ultricies. Aliquam malesuada porta libero, quis varius tortor aliquet commodo. Cras sed laoreet nunc. In dignissim lacinia feugiat. Aenean quam tellus, pretium vel lacinia eu, commodo id sapien. Aenean eu arcu nunc. Aliquam ac elit lorem. Integer ligula nisl, ultricies vel auctor sed, eleifend quis orci. </p>

                <ol>
                    <li>Lorem ipsum</li>
                    <li>Is heavily used here</li>
                    <li>To push things down the page</li>
                </ol>

                <p>Curabitur condimentum massa lectus. Maecenas condimentum, ligula nec rutrum vestibulum, tellus ipsum varius nisi, in consequat nisl diam sed tellus. Pellentesque tempor, ipsum non feugiat lobortis, mi urna pharetra dui, quis ultrices tellus quam quis massa. Sed auctor eros id est placerat id aliquam mi cursus. Proin facilisis venenatis libero quis molestie. In porttitor mi at quam consequat non sollicitudin mi hendrerit. Maecenas sed massa ut risus aliquam imperdiet. Nam sed arcu ligula, vitae mattis mi. Duis ligula nunc, pellentesque at sagittis ut, faucibus id arcu. Aenean placerat tellus ut mauris laoreet lobortis. Aliquam vitae est purus, ut faucibus risus. Aenean at quam sem. Nulla sit amet quam sit amet dui congue pulvinar. Quisque venenatis ante eu sem dapibus nec ullamcorper augue sodales. </p>

                <pre>function(){
    $.js.theme(THEMES.JSCOM);
}</pre>
                <p>Fusce nec elit non odio venenatis laoreet blandit vel neque. Nunc molestie suscipit mauris ultrices interdum. Nunc feugiat volutpat metus, in euismod ante dignissim id. Pellentesque volutpat porta lacinia. Sed sit amet dolor lorem. Sed vehicula commodo neque, id euismod nisl imperdiet et. Pellentesque leo orci, rhoncus at dignissim at, consectetur quis augue. Phasellus dapibus, erat id aliquet sodales, magna sem cursus massa, et convallis purus urna non lacus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Aliquam erat volutpat. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nullam in nunc libero. Duis ultrices feugiat dolor quis placerat. Suspendisse euismod feugiat nulla, in pretium ipsum pellentesque semper. Ut semper elementum dui, id luctus erat tincidunt in. </p>
            </section>
        </article>

        <footer data-role="content">
            <p>&copy;2013 <a href="http://johnsedlak.com">John Sedlak</a></p>
        </footer>
    </body>
</html>
